// <auto-generated />
using System;
using GameDataService.DAL.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameDataService.DAL.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20250216082721_RefactoringNames")]
    partial class RefactoringNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.AbilityAndEffectScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("EffectId")
                        .HasColumnType("integer")
                        .HasColumnName("effect_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("EffectId");

                    b.ToTable("AbilityAndEffectScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Artefact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArrowsBonus")
                        .HasColumnType("integer")
                        .HasColumnName("arrows_bonus");

                    b.Property<int?>("ArtefactSetId")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_set_id");

                    b.Property<int>("ArtefactSlot")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_slot");

                    b.Property<int?>("AttackBonus")
                        .HasColumnType("integer")
                        .HasColumnName("attack_bonus");

                    b.Property<int?>("DefenceBonus")
                        .HasColumnType("integer")
                        .HasColumnName("defence_bonus");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("HealthBonus")
                        .HasColumnType("integer")
                        .HasColumnName("health_bonus");

                    b.Property<int?>("HeroClassId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_class_id");

                    b.Property<double?>("InitiativeBonus")
                        .HasColumnType("double precision")
                        .HasColumnName("initiative_bonus");

                    b.Property<int?>("LuckBonus")
                        .HasColumnType("integer")
                        .HasColumnName("luck_bonus");

                    b.Property<int?>("MaxDamageBonus")
                        .HasColumnType("integer")
                        .HasColumnName("max_damage_bonus");

                    b.Property<int?>("MinDamageBonus")
                        .HasColumnType("integer")
                        .HasColumnName("min_damage_bonus");

                    b.Property<int?>("MoraleBonus")
                        .HasColumnType("integer")
                        .HasColumnName("morale_bonus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("RangeBonus")
                        .HasColumnType("integer")
                        .HasColumnName("range_bonus");

                    b.Property<int?>("SpeedBonus")
                        .HasColumnType("integer")
                        .HasColumnName("speed_bonus");

                    b.HasKey("Id");

                    b.HasIndex("ArtefactSetId");

                    b.HasIndex("HeroClassId");

                    b.ToTable("Artefacts");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("ArtefactId")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("ArtefactId");

                    b.ToTable("ArtefactAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ArtefactSets");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSetBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArrowsBonus")
                        .HasColumnType("integer")
                        .HasColumnName("arrows_bonus");

                    b.Property<int>("ArtefactSetId")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_set_id");

                    b.Property<int?>("AttackBonus")
                        .HasColumnType("integer")
                        .HasColumnName("attack_bonus");

                    b.Property<int?>("DefenceBonus")
                        .HasColumnType("integer")
                        .HasColumnName("defence_bonus");

                    b.Property<int?>("HealthBonus")
                        .HasColumnType("integer")
                        .HasColumnName("health_bonus");

                    b.Property<int?>("HeroClassId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_class_id");

                    b.Property<double?>("InitiativeBonus")
                        .HasColumnType("double precision")
                        .HasColumnName("initiative_bonus");

                    b.Property<int?>("LuckBonus")
                        .HasColumnType("integer")
                        .HasColumnName("luck_bonus");

                    b.Property<int?>("MaxDamageBonus")
                        .HasColumnType("integer")
                        .HasColumnName("max_damage_bonus");

                    b.Property<int?>("MinDamageBonus")
                        .HasColumnType("integer")
                        .HasColumnName("min_damage_bonus");

                    b.Property<int?>("MoraleBonus")
                        .HasColumnType("integer")
                        .HasColumnName("morale_bonus");

                    b.Property<int?>("RangeBonus")
                        .HasColumnType("integer")
                        .HasColumnName("range_bonus");

                    b.Property<int?>("SpeedBonus")
                        .HasColumnType("integer")
                        .HasColumnName("speed_bonus");

                    b.HasKey("Id");

                    b.HasIndex("ArtefactSetId");

                    b.HasIndex("HeroClassId");

                    b.ToTable("ArtefactSetBonuses");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSetBonusAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("ArtefactSetBonusId")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_set_bonus_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("ArtefactSetBonusId");

                    b.ToTable("ArtefactSetBonusAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SubfactionId")
                        .HasColumnType("integer")
                        .HasColumnName("subfaction_id");

                    b.HasKey("Id");

                    b.HasIndex("SubfactionId");

                    b.ToTable("Competencies");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Duration")
                        .HasColumnType("double precision")
                        .HasColumnName("duration");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer")
                        .HasColumnName("effect_type");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("parametrs");

                    b.Property<double?>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("Effects");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.FactionAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer")
                        .HasColumnName("faction_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("FactionId");

                    b.ToTable("FactionAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("integer")
                        .HasColumnName("attack");

                    b.Property<int>("Defence")
                        .HasColumnType("integer")
                        .HasColumnName("defence");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_class_id");

                    b.Property<double>("Initiative")
                        .HasColumnType("double precision")
                        .HasColumnName("initiative");

                    b.Property<int>("Luck")
                        .HasColumnType("integer")
                        .HasColumnName("luck");

                    b.Property<int>("MaxDamage")
                        .HasColumnType("integer")
                        .HasColumnName("max_damage");

                    b.Property<int>("MinDamage")
                        .HasColumnType("integer")
                        .HasColumnName("min_damage");

                    b.Property<int>("Morale")
                        .HasColumnType("integer")
                        .HasColumnName("morale");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SubfactionId")
                        .HasColumnType("integer")
                        .HasColumnName("subfaction_id");

                    b.HasKey("Id");

                    b.HasIndex("HeroClassId");

                    b.HasIndex("SubfactionId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroAndArtefactScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtefactId")
                        .HasColumnType("integer")
                        .HasColumnName("artefact_id");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_id");

                    b.HasKey("Id");

                    b.HasIndex("ArtefactId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroAndArtefactScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("HeroClasses");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroClassAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_class_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("HeroClassId");

                    b.ToTable("HeroClassAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int?>("CompetenceId")
                        .HasColumnType("integer")
                        .HasColumnName("competence_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SkillType")
                        .HasColumnType("integer")
                        .HasColumnName("skill_type");

                    b.Property<int?>("SubfactionId")
                        .HasColumnType("integer")
                        .HasColumnName("subfaction_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("CompetenceId");

                    b.HasIndex("SubfactionId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SkillAndSpellScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SkillId")
                        .HasColumnType("integer")
                        .HasColumnName("skill_id");

                    b.Property<int>("SpellId")
                        .HasColumnType("integer")
                        .HasColumnName("spell_id");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("SpellId");

                    b.ToTable("SkillAndSpellScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SkillDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RequiredSkillId")
                        .HasColumnType("integer")
                        .HasColumnName("required_skill_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer")
                        .HasColumnName("skill_id");

                    b.HasKey("Id");

                    b.HasIndex("RequiredSkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillDependencies");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("RequiredSkillId")
                        .HasColumnType("integer")
                        .HasColumnName("required_skill_id");

                    b.HasKey("Id");

                    b.HasIndex("RequiredSkillId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SpellAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("SpellId")
                        .HasColumnType("integer")
                        .HasColumnName("spell_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Subfaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer")
                        .HasColumnName("faction_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("Subfactions");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SubfactionAndAbilityScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("SubfactionId")
                        .HasColumnType("integer")
                        .HasColumnName("subfaction_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("SubfactionId");

                    b.ToTable("SubfactionAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Arrows")
                        .HasColumnType("integer")
                        .HasColumnName("arrows");

                    b.Property<int>("Attack")
                        .HasColumnType("integer")
                        .HasColumnName("attack");

                    b.Property<int?>("BaseUnitId")
                        .HasColumnType("integer")
                        .HasColumnName("base_unit_id");

                    b.Property<int>("Defence")
                        .HasColumnType("integer")
                        .HasColumnName("defence");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("FactionId")
                        .HasColumnType("integer")
                        .HasColumnName("faction_id");

                    b.Property<int>("Health")
                        .HasColumnType("integer")
                        .HasColumnName("health");

                    b.Property<double>("Initiative")
                        .HasColumnType("double precision")
                        .HasColumnName("initiative");

                    b.Property<int>("Luck")
                        .HasColumnType("integer")
                        .HasColumnName("luck");

                    b.Property<int>("MaxDamage")
                        .HasColumnType("integer")
                        .HasColumnName("max_damage");

                    b.Property<int>("MinDamage")
                        .HasColumnType("integer")
                        .HasColumnName("min_damage");

                    b.Property<int>("Morale")
                        .HasColumnType("integer")
                        .HasColumnName("morale");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Range")
                        .HasColumnType("integer")
                        .HasColumnName("range");

                    b.Property<int>("Speed")
                        .HasColumnType("integer")
                        .HasColumnName("speed");

                    b.HasKey("Id");

                    b.HasIndex("BaseUnitId");

                    b.HasIndex("FactionId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.UnitAndAbilitytScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer")
                        .HasColumnName("ability_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitAndAbilitytScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.AbilityAndEffectScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany("AbilityAndEffectScopes")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Artefact", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.ArtefactSet", "ArtefactSet")
                        .WithMany("Artefacts")
                        .HasForeignKey("ArtefactSetId");

                    b.HasOne("GameDataService.DAL.DbModels.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId");

                    b.Navigation("ArtefactSet");

                    b.Navigation("HeroClass");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Artefact", "Artefact")
                        .WithMany("ArtefactAndAbilityScopes")
                        .HasForeignKey("ArtefactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Artefact");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSetBonus", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.ArtefactSet", "ArtefactSet")
                        .WithMany("ArtefactSetBonuses")
                        .HasForeignKey("ArtefactSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId");

                    b.Navigation("ArtefactSet");

                    b.Navigation("HeroClass");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSetBonusAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.ArtefactSetBonus", "ArtefactSetBonus")
                        .WithMany("ArtefactSetBonusAndAbilityScopes")
                        .HasForeignKey("ArtefactSetBonusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("ArtefactSetBonus");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Competence", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Subfaction", "Subfaction")
                        .WithMany()
                        .HasForeignKey("SubfactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subfaction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.FactionAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Faction", "Faction")
                        .WithMany("FactionAndAbilityScopes")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Hero", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Subfaction", "Subfaction")
                        .WithMany()
                        .HasForeignKey("SubfactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeroClass");

                    b.Navigation("Subfaction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Hero", "Hero")
                        .WithMany("HeroAndAbilityScopes")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroAndArtefactScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Artefact", "Artefact")
                        .WithMany()
                        .HasForeignKey("ArtefactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Hero", "Hero")
                        .WithMany("HeroAndArtefactScopes")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artefact");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroClassAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.HeroClass", "HeroClass")
                        .WithMany("HeroClassAndAbilityScopes")
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("HeroClass");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Skill", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId");

                    b.HasOne("GameDataService.DAL.DbModels.Models.Competence", "Competence")
                        .WithMany("Skills")
                        .HasForeignKey("CompetenceId");

                    b.HasOne("GameDataService.DAL.DbModels.Models.Subfaction", "Subfaction")
                        .WithMany("Skills")
                        .HasForeignKey("SubfactionId");

                    b.Navigation("Ability");

                    b.Navigation("Competence");

                    b.Navigation("Subfaction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SkillAndSpellScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Skill", "Skill")
                        .WithMany("SkillAndSpellScopes")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Spell", "Spell")
                        .WithMany()
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SkillDependency", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Skill", "RequiredSkill")
                        .WithMany("DependentSkillDependencies")
                        .HasForeignKey("RequiredSkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Skill", "Skill")
                        .WithMany("RequiredSkillDependencies")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RequiredSkill");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Spell", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Skill", "RequiredSkill")
                        .WithMany()
                        .HasForeignKey("RequiredSkillId");

                    b.Navigation("RequiredSkill");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SpellAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Spell", "Spell")
                        .WithMany("SpellAndAbilityScopes")
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Subfaction", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.SubfactionAndAbilityScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Subfaction", "Subfaction")
                        .WithMany("SubfactionAndAbilityScopes")
                        .HasForeignKey("SubfactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Subfaction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Unit", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Unit", "BaseUnit")
                        .WithMany("Upgrades")
                        .HasForeignKey("BaseUnitId");

                    b.HasOne("GameDataService.DAL.DbModels.Models.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId");

                    b.Navigation("BaseUnit");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.UnitAndAbilitytScope", b =>
                {
                    b.HasOne("GameDataService.DAL.DbModels.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDataService.DAL.DbModels.Models.Unit", "Unit")
                        .WithMany("UnitAndAbilitytScopes")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Ability", b =>
                {
                    b.Navigation("AbilityAndEffectScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Artefact", b =>
                {
                    b.Navigation("ArtefactAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSet", b =>
                {
                    b.Navigation("ArtefactSetBonuses");

                    b.Navigation("Artefacts");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.ArtefactSetBonus", b =>
                {
                    b.Navigation("ArtefactSetBonusAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Competence", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Faction", b =>
                {
                    b.Navigation("FactionAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Hero", b =>
                {
                    b.Navigation("HeroAndAbilityScopes");

                    b.Navigation("HeroAndArtefactScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.HeroClass", b =>
                {
                    b.Navigation("HeroClassAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Skill", b =>
                {
                    b.Navigation("DependentSkillDependencies");

                    b.Navigation("RequiredSkillDependencies");

                    b.Navigation("SkillAndSpellScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Spell", b =>
                {
                    b.Navigation("SpellAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Subfaction", b =>
                {
                    b.Navigation("Skills");

                    b.Navigation("SubfactionAndAbilityScopes");
                });

            modelBuilder.Entity("GameDataService.DAL.DbModels.Models.Unit", b =>
                {
                    b.Navigation("UnitAndAbilitytScopes");

                    b.Navigation("Upgrades");
                });
#pragma warning restore 612, 618
        }
    }
}
