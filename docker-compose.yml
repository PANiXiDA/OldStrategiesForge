services:
# API Gateway
  api-gateway-service:
    container_name: APIGateway
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      PROFILE_SERVICE_URL: http://profile-service:8001
      HTTP_PORT: 8080
      GRPC_PORT: 8081
    depends_on:
      - profile-service  
    networks:
      - app-network

# Profile     
  profile-service:
    container_name: profile-service
    build:
      context: .
      dockerfile: Services/ProfileService/Dockerfile
    restart: unless-stopped
    environment:
      DB_HOST: profile_db
      DB_PORT: 5432
      POSTGRES_DB: ProfileServiceDb
      DB_USER: postgres
      DB_PASSWORD: 123456789
      ASPNETCORE_ENVIRONMENT: production
      IMAGES_SERVICE_URL: http://images-service:8003
      HTTP_PORT: 8000
      GRPC_PORT: 8001
      RabbitMQ: rabbitmq
    depends_on:
      - profile_db
      - profile_db_migrator
    networks:
      - app-network
      
  profile_db:
    image: postgres:15
    container_name: profile_db
    restart: always   
    ports:
      - "5434:5432"
    volumes:
      - profile-database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ProfileServiceDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
    networks:
      - app-network

  profile_db_migrator:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: profile_db_migrator
    restart: on-failure
    environment:
      DB_HOST: profile_db
      DB_PORT: 5432
      POSTGRES_DB: ProfileServiceDb
      DB_USER: postgres
      DB_PASSWORD: 123456789
      ASPNETCORE_ENVIRONMENT: production
      HTTP_PORT: 8000
      GRPC_PORT: 8001
      RabbitMQ: rabbitmq
    working_dir: /app
    volumes:
      - .:/app
    command:
      - sh
      - -c
      - |
        dotnet tool install --global dotnet-ef &&
        export PATH="/usr/local/bin:/usr/bin:/bin:/root/.dotnet/tools" &&
        dotnet ef database update --project Services/ProfileService/ProfileService.csproj \
                                  --startup-project Services/ProfileService/ProfileService.csproj
    depends_on:
      - profile_db     
    networks:
      - app-network
     
# Images
  images-service:
    container_name: images-service
    build:
      context: .
      dockerfile: Services/ImagesService/Dockerfile
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: production
      HTTP_PORT: 8002
      GRPC_PORT: 8003
    networks:
      - app-network
      
# Email
  email-service:
    container_name: email-service
    build:
      context: .
      dockerfile: Services/EmailService/Dockerfile
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DB_HOST: email_db
      DB_PORT: 5432
      POSTGRES_DB: EmailServiceDb
      DB_USER: postgres
      DB_PASSWORD: 123456789
      RabbitMQ: rabbitmq
    depends_on:
      - email_db
      - email_db_migrator
    networks:
      - app-network
      
  email_db:
    image: postgres:15
    container_name: email_db
    restart: always   
    ports:
      - "5435:5432"
    volumes:
      - email-database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: EmailServiceDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
    networks:
      - app-network

  email_db_migrator:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: email_db_migrator
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DB_HOST: email_db
      DB_PORT: 5432
      POSTGRES_DB: EmailServiceDb
      DB_USER: postgres
      DB_PASSWORD: 123456789
    working_dir: /app
    volumes:
      - .:/app
    command:
      - sh
      - -c
      - |
        dotnet tool install --global dotnet-ef &&
        export PATH="/usr/local/bin:/usr/bin:/bin:/root/.dotnet/tools" &&
        dotnet ef database update --project Services/EmailService/EmailService.csproj \
                                  --startup-project Services/EmailService/EmailService.csproj
    depends_on:
      - email_db     
    networks:
      - app-network

# UI      
  old-strategy-forge-ui-service:
    container_name: old-strategy-forge-ui-service
    build:
      context: .
      dockerfile: FrontendService/Dockerfile
    restart: unless-stopped
    ports:
      - "9080:9080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTP_PORTS: 9080
      RabbitMQ: rabbitmq
    networks:
      - app-network

# Инфраструктура
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=mixaila17may2003@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Test1234
    ports:
      - "5050:80"
    networks:
      - app-network
   
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
          
networks:
  app-network:
    driver: bridge
 
volumes:
  profile-database-data:
  email-database-data:
  redis_data:
